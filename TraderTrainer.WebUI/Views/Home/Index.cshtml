@model TraderTrainer.WebUI.Models.StockDataModel

@{
    ViewBag.Title = "Index";
}

<div class="modal fade" id="orderModal" 
     tabindex="-1" role="dialog" aria-labelledby="orderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title" id="orderModalLabel">Order</h4>
            </div>
            <div class="modal-body">
                <p>Place an order... which stock? Buy or sell? Volume? How much will that cost?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Place Order</button>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div id="chartCanvasContainer1">
            <canvas id="chartCanvas1" style="border:1px black;width:100%;height:100%"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div id="chartCanvasContainer2">
            <canvas id="chartCanvas2"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#orderModal">Place Order</button>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div id="chartCanvasContainer3">
            <canvas id="chartCanvas3" style="border:1px black;width:100%;height:100%"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div id="chartCanvasContainer4">
            <canvas id="chartCanvas4"></canvas>
        </div>
    </div>
</div>
<script>

   // $("#chartCanvasContainer1").resizeable();


    $(document).ready(function () {
        'use strict';

        var theCanvas = document.getElementById("chartCanvas1"); //("#chartCanvas");
       
        var isPaused = false;

        $("#pauseToggle").click(function () {
            'use strict';
            isPaused = !isPaused;

            if (isPaused)
                this.innerText = "Go";
            else
                this.innerText = "Pause";
        });


      //  ctx.beginPath();

        //ctx.moveTo(5, yAxis );

        //var index;

        var openPrices = [ 
@foreach( var l in Model.Lines )
{
    @l.Open.ToString(); @:,
}
        ];

        var highPrices = [
@foreach( var l in Model.Lines )
{
    @l.High.ToString(); @:,
}
        ];

        var lowPrices = [
@foreach( var l in Model.Lines )
{
    @l.Low.ToString(); @:,
}
        ];

        var closePrices = [
@foreach( var l in Model.Lines )
{
    @l.Close.ToString(); @:,
}
        ];

        var volumes = [
@foreach( var l in Model.Lines )
{
    @l.Volume.ToString(); @:,
}
        ];

        var daysVisible = 30;
        
        var currentDay = 0;

        var chartRange;
        var volumeRange;

        
        window.setInterval(function () {
            if (isPaused)
                return;

            var ctx = theCanvas.getContext("2d");

            ctx.clearRect(0, 0, theCanvas.width, theCanvas.height);

            var chartRect = ttc_getRectFromElement(theCanvas, 5);
            chartRect.bottom -= theCanvas.height * 0.25;

            ttc_drawAxes(ctx, chartRect);

            ctx.save();
            ttc_clipRect(ctx, chartRect);

            chartRange = ttc_getHighLowRange(highPrices, lowPrices, currentDay, daysVisible);

            ttc_drawHorizontalGridLines(ctx, chartRect, chartRange.minValue, chartRange.maxValue, 1);

            chartRange.valueRange = chartRange.maxValue - chartRange.minValue;

            ttc_drawCandlestickSeries(ctx, chartRect, openPrices, highPrices, lowPrices, closePrices, currentDay, daysVisible, daysVisible, chartRange.minValue, chartRange.maxValue);

            ttc_drawLineSeries(ctx, chartRect, closePrices, currentDay, daysVisible, daysVisible, chartRange.minValue, chartRange.maxValue);

            ctx.restore();

            chartRect.top = chartRect.bottom + 5;
            chartRect.bottom = chartRect.top + theCanvas.height * 0.25;

            ttc_drawAxes(ctx, chartRect);

            ctx.save();
            ttc_clipRect(ctx, chartRect);

            volumeRange = ttc_getChartRange(volumes, currentDay, daysVisible);
            ttc_drawColumnSeries(ctx, chartRect, volumes, currentDay, daysVisible, daysVisible, 0, volumeRange.maxValue);

            ctx.restore();
            currentDay++;
        }, 1000);

    });
</script>